"use strict";
var Sequelize, basename, config, db, env, fs, path, sequelize,
  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

fs = require("fs");

path = require("path");

Sequelize = require("sequelize");

basename = path.basename(module.filename);

env = process.env.NODE_ENV || "development";

config = require(__dirname + '/../config/config.json')[env];

db = {};

if (process.env.DATABASE_URL) {
  sequelize = new Sequelize(process.env.DATABASE_URL, {
    dialect: 'postgres',
    protocol: 'postgres',
    port: match[4],
    host: match[3],
    logging: true
  });
} else {
  sequelize = new Sequelize(config.database, config.username, config.password, config);
}

fs.readdirSync(__dirname).filter(function(file) {
  return (file.indexOf(".") !== 0) && (file !== basename);
}).forEach(function(file) {
  var model;
  model = sequelize["import"](path.join(__dirname, file));
  return db[model.name] = model;
});

Object.keys(db).forEach(function(modelName) {
  if (indexOf.call(db[modelName], "associate") >= 0) {
    return db[modelName].associate(db);
  }
});

db.sequelize = sequelize;

db.Sequelize = Sequelize;

module.exports = db;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxZQUFBLENBQUE7QUFBQSxJQUFBLHlEQUFBO0VBQUEsbUpBQUE7O0FBQUEsRUFDQSxHQUFZLE9BQUEsQ0FBUSxJQUFSLENBRFosQ0FBQTs7QUFBQSxJQUVBLEdBQVksT0FBQSxDQUFRLE1BQVIsQ0FGWixDQUFBOztBQUFBLFNBR0EsR0FBWSxPQUFBLENBQVEsV0FBUixDQUhaLENBQUE7O0FBQUEsUUFJQSxHQUFZLElBQUksQ0FBQyxRQUFMLENBQWMsTUFBTSxDQUFDLFFBQXJCLENBSlosQ0FBQTs7QUFBQSxHQUtBLEdBQVksT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFaLElBQXdCLGFBTHBDLENBQUE7O0FBQUEsTUFNQSxHQUFZLE9BQUEsQ0FBUSxTQUFBLEdBQVksd0JBQXBCLENBQThDLENBQUEsR0FBQSxDQU4xRCxDQUFBOztBQUFBLEVBT0EsR0FBWSxFQVBaLENBQUE7O0FBVUEsSUFBRyxPQUFPLENBQUMsR0FBRyxDQUFDLFlBQWY7QUFDRSxFQUFBLFNBQUEsR0FBZ0IsSUFBQSxTQUFBLENBQVUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxZQUF0QixFQUFvQztBQUFBLElBQ2xELE9BQUEsRUFBVSxVQUR3QztBQUFBLElBRWxELFFBQUEsRUFBVSxVQUZ3QztBQUFBLElBR2xELElBQUEsRUFBVSxLQUFNLENBQUEsQ0FBQSxDQUhrQztBQUFBLElBSWxELElBQUEsRUFBVSxLQUFNLENBQUEsQ0FBQSxDQUprQztBQUFBLElBS2xELE9BQUEsRUFBVSxJQUx3QztHQUFwQyxDQUFoQixDQURGO0NBQUEsTUFBQTtBQVNFLEVBQUEsU0FBQSxHQUFnQixJQUFBLFNBQUEsQ0FBVSxNQUFNLENBQUMsUUFBakIsRUFBMkIsTUFBTSxDQUFDLFFBQWxDLEVBQTRDLE1BQU0sQ0FBQyxRQUFuRCxFQUE2RCxNQUE3RCxDQUFoQixDQVRGO0NBVkE7O0FBQUEsRUF1QkUsQ0FBQyxXQURILENBQ2UsU0FEZixDQUVFLENBQUMsTUFGSCxDQUVXLFNBQUMsSUFBRCxHQUFBO0FBQ1AsU0FBTyxDQUFDLElBQUksQ0FBQyxPQUFMLENBQWEsR0FBYixDQUFBLEtBQXVCLENBQXhCLENBQUEsSUFBK0IsQ0FBQyxJQUFBLEtBQVUsUUFBWCxDQUF0QyxDQURPO0FBQUEsQ0FGWCxDQUtFLENBQUMsT0FMSCxDQUtXLFNBQUMsSUFBRCxHQUFBO0FBQ1AsTUFBQSxLQUFBO0FBQUEsRUFBQSxLQUFBLEdBQVEsU0FBVSxDQUFBLFFBQUEsQ0FBVixDQUFvQixJQUFJLENBQUMsSUFBTCxDQUFVLFNBQVYsRUFBcUIsSUFBckIsQ0FBcEIsQ0FBUixDQUFBO1NBQ0EsRUFBRyxDQUFBLEtBQUssQ0FBQyxJQUFOLENBQUgsR0FBaUIsTUFGVjtBQUFBLENBTFgsQ0F0QkEsQ0FBQTs7QUFBQSxNQWdDTSxDQUFDLElBQVAsQ0FBWSxFQUFaLENBQWUsQ0FBQyxPQUFoQixDQUF3QixTQUFDLFNBQUQsR0FBQTtBQUN0QixFQUFBLElBQUcsYUFBZSxFQUFHLENBQUEsU0FBQSxDQUFsQixFQUFBLFdBQUEsTUFBSDtXQUNFLEVBQUcsQ0FBQSxTQUFBLENBQVUsQ0FBQyxTQUFkLENBQXdCLEVBQXhCLEVBREY7R0FEc0I7QUFBQSxDQUF4QixDQWhDQSxDQUFBOztBQUFBLEVBb0NFLENBQUMsU0FBSCxHQUFlLFNBcENmLENBQUE7O0FBQUEsRUFxQ0UsQ0FBQyxTQUFILEdBQWUsU0FyQ2YsQ0FBQTs7QUFBQSxNQXVDTSxDQUFDLE9BQVAsR0FBaUIsRUF2Q2pCLENBQUEiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiL3NvdXJjZS8iLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbmZzICAgICAgICA9IHJlcXVpcmUoXCJmc1wiKTtcbnBhdGggICAgICA9IHJlcXVpcmUoXCJwYXRoXCIpO1xuU2VxdWVsaXplID0gcmVxdWlyZShcInNlcXVlbGl6ZVwiKTtcbmJhc2VuYW1lICA9IHBhdGguYmFzZW5hbWUobW9kdWxlLmZpbGVuYW1lKTtcbmVudiAgICAgICA9IHByb2Nlc3MuZW52Lk5PREVfRU5WIHx8IFwiZGV2ZWxvcG1lbnRcIjtcbmNvbmZpZyAgICA9IHJlcXVpcmUoX19kaXJuYW1lICsgJy8uLi9jb25maWcvY29uZmlnLmpzb24nKVtlbnZdO1xuZGIgICAgICAgID0ge307XG5cblxuaWYgcHJvY2Vzcy5lbnYuREFUQUJBU0VfVVJMXG4gIHNlcXVlbGl6ZSA9IG5ldyBTZXF1ZWxpemUgcHJvY2Vzcy5lbnYuREFUQUJBU0VfVVJMLCB7XG4gICAgZGlhbGVjdDogICdwb3N0Z3JlcydcbiAgICBwcm90b2NvbDogJ3Bvc3RncmVzJ1xuICAgIHBvcnQ6ICAgICBtYXRjaFs0XVxuICAgIGhvc3Q6ICAgICBtYXRjaFszXVxuICAgIGxvZ2dpbmc6ICB0cnVlXG4gIH1cbmVsc2VcbiAgc2VxdWVsaXplID0gbmV3IFNlcXVlbGl6ZShjb25maWcuZGF0YWJhc2UsIGNvbmZpZy51c2VybmFtZSwgY29uZmlnLnBhc3N3b3JkLCBjb25maWcpO1xuXG5cbmZzXG4gIC5yZWFkZGlyU3luYyhfX2Rpcm5hbWUpXG4gIC5maWx0ZXIoIChmaWxlKSAtPlxuICAgIHJldHVybiAoZmlsZS5pbmRleE9mKFwiLlwiKSBpc250IDApIGFuZCAoZmlsZSBpc250IGJhc2VuYW1lKTtcbiAgKVxuICAuZm9yRWFjaCgoZmlsZSkgLT5cbiAgICBtb2RlbCA9IHNlcXVlbGl6ZVtcImltcG9ydFwiXShwYXRoLmpvaW4oX19kaXJuYW1lLCBmaWxlKSk7XG4gICAgZGJbbW9kZWwubmFtZV0gPSBtb2RlbDtcbiAgKVxuXG5PYmplY3Qua2V5cyhkYikuZm9yRWFjaCAobW9kZWxOYW1lKSAtPlxuICBpZiBcImFzc29jaWF0ZVwiIGluIGRiW21vZGVsTmFtZV1cbiAgICBkYlttb2RlbE5hbWVdLmFzc29jaWF0ZShkYik7XG5cbmRiLnNlcXVlbGl6ZSA9IHNlcXVlbGl6ZTtcbmRiLlNlcXVlbGl6ZSA9IFNlcXVlbGl6ZTtcblxubW9kdWxlLmV4cG9ydHMgPSBkYjtcblxuXG4iXX0=